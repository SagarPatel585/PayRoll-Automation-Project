<Activity mc:Ignorable="sap sap2010" x:Class="Send_Email_of_Monthly_Leaves" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:bec="clr-namespace:BalaReva.Excel.Charts;assembly=BalaReva.Excel" xmlns:bem="clr-namespace:BalaReva.EasyExcel.Main;assembly=BalaReva.EasyExcel" xmlns:bes="clr-namespace:BalaReva.Excel.Sheets;assembly=BalaReva.Excel" xmlns:bes1="clr-namespace:BalaReva.EasyExcel.Sheets;assembly=BalaReva.EasyExcel" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:us="clr-namespace:UiPathTeam.SharePoint;assembly=UiPathTeam.SharePoint" xmlns:usa="clr-namespace:UiPathTeam.SharePoint.Activities;assembly=UiPathTeam.SharePoint.Activities" xmlns:usal="clr-namespace:UiPathTeam.SharePoint.Activities.Libraries;assembly=UiPathTeam.SharePoint.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_dt_MonthlyLeave" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_MonthName" Type="InArgument(x:String)" />
    <x:Property Name="in_CurrentYear" Type="InArgument(x:String)" />
    <x:Property Name="in_SharePointURL" Type="InArgument(x:String)" />
    <x:Property Name="in_SharePointPassword" Type="InArgument(ss:SecureString)" />
    <x:Property Name="in_SharePointUsername" Type="InArgument(x:String)" />
    <x:Property Name="in_UserFolderURL" Type="InArgument(x:String)" />
    <x:Property Name="in_UserPath" Type="InArgument(x:String)" />
    <x:Property Name="out_MonthlyLeaveReportName" Type="OutArgument(x:String)" />
    <x:Property Name="out_pathOfMonthlyLeaveReport" Type="OutArgument(x:String)" />
    <x:Property Name="in_SharedDocuments" Type="InArgument(x:String)" />
  </x:Members>
  <this:Send_Email_of_Monthly_Leaves.in_FolderPath>
    <InArgument x:TypeArguments="x:String" />
  </this:Send_Email_of_Monthly_Leaves.in_FolderPath>
  <this:Send_Email_of_Monthly_Leaves.in_MonthName>
    <InArgument x:TypeArguments="x:String" />
  </this:Send_Email_of_Monthly_Leaves.in_MonthName>
  <this:Send_Email_of_Monthly_Leaves.in_CurrentYear>
    <InArgument x:TypeArguments="x:String" />
  </this:Send_Email_of_Monthly_Leaves.in_CurrentYear>
  <this:Send_Email_of_Monthly_Leaves.in_SharePointURL>
    <InArgument x:TypeArguments="x:String" />
  </this:Send_Email_of_Monthly_Leaves.in_SharePointURL>
  <this:Send_Email_of_Monthly_Leaves.in_SharePointPassword>
    <InArgument x:TypeArguments="ss:SecureString" />
  </this:Send_Email_of_Monthly_Leaves.in_SharePointPassword>
  <this:Send_Email_of_Monthly_Leaves.in_SharePointUsername>
    <InArgument x:TypeArguments="x:String" />
  </this:Send_Email_of_Monthly_Leaves.in_SharePointUsername>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1208,4704</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Send_Email_of_Monthly_Leaves_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="49">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>BalaReva.Excel.Sheets</x:String>
      <x:String>BalaReva.Excel.Base</x:String>
      <x:String>BalaReva.Excel.Charts</x:String>
      <x:String>BalaReva.Excel.Utilities</x:String>
      <x:String>BalaReva.Excel.Interfaces</x:String>
      <x:String>UiPathTeam.SharePoint</x:String>
      <x:String>Microsoft.SharePoint.Client</x:String>
      <x:String>UiPathTeam.SharePoint.Activities</x:String>
      <x:String>UiPathTeam.SharePoint.Activities.Libraries</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>BalaReva.EasyExcel.Main</x:String>
      <x:String>BalaReva.EasyExcel.Base</x:String>
      <x:String>BalaReva.EasyExcel.Utilities</x:String>
      <x:String>BalaReva.EasyExcel.Sheets</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="37">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>BalaReva.Excel</AssemblyReference>
      <AssemblyReference>BalaReva.Excel.Base</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>BalaReva.Excel.Utilities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.Runtime</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel</AssemblyReference>
      <AssemblyReference>BalaReva.EasyExcel.Utilities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Generate monthly leave graph" sap:VirtualizedContainerService.HintSize="732,4639" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="pathOfMonthlyLeaveFolder" />
      <Variable x:TypeArguments="x:String" Name="sheetName" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="workBook" />
      <Variable x:TypeArguments="x:Int32" Name="rowIndex" />
      <Variable x:TypeArguments="x:Int32" Name="maxCasualLeaves" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message- for starting of generating monthly leave graph" sap:VirtualizedContainerService.HintSize="690,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Generating monthly leave report with graph...&quot;]" />
    <Sequence DisplayName="Create month leave report folder &amp; path of monthly leave report file" sap:VirtualizedContainerService.HintSize="690,548" sap2010:WorkflowViewState.IdRef="Sequence_22">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="PayRollAutomation_MonthlyLeaveReport" DisplayName="Get monthly leave report folder name" FolderPath="PayRoll_Automation" sap:VirtualizedContainerService.HintSize="334,137" sap2010:WorkflowViewState.IdRef="GetRobotAsset_5">
        <ui:GetRobotAsset.Value>
          <OutArgument x:TypeArguments="x:String">[out_MonthlyLeaveReportName]</OutArgument>
        </ui:GetRobotAsset.Value>
      </ui:GetRobotAsset>
      <Assign DisplayName="Path of monthly leave folder" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[pathOfMonthlyLeaveFolder]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[String.Format("{0}/{1}/",in_FolderPath,out_MonthlyLeaveReportName)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create folder of monthly leave report " sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[pathOfMonthlyLeaveFolder]" />
      <Assign DisplayName="Path of monthly leave report file" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[out_pathOfMonthlyLeaveReport]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[String.Format("{0}/{1}_{2}_{3}.xlsx",pathOfMonthlyLeaveFolder,out_MonthlyLeaveReportName,in_MonthName,in_CurrentYear)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope- for monthly leave report file" sap:VirtualizedContainerService.HintSize="690,606" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" Visible="False" Workbook="[workbook]" WorkbookPath="[out_pathOfMonthlyLeaveReport]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Write monthly leave data table into excel" sap:VirtualizedContainerService.HintSize="487,497" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign sheet name" sap:VirtualizedContainerService.HintSize="445,60" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[sheetName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[out_MonthlyLeaveReportName]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[in_dt_MonthlyLeave]" DisplayName="Write monthly leave data table" sap:VirtualizedContainerService.HintSize="445,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="[sheetName]">
              <ui:ExcelWriteRange.StartingCell>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelWriteRange.StartingCell>
            </ui:ExcelWriteRange>
            <bec:ColumnChart ExecutionResult="{x:Null}" FilePassword="{x:Null}" ImageCopy="{x:Null}" LegendRange="{x:Null}" ModifyPassword="{x:Null}" CellRange="[&quot;A1:C&quot;+( in_dt_MonthlyLeave.RowCount+1).ToString]" ChartTitle="Monthly Leave Graph" ChartType="Column3DClustered" ContinueOnError="False" Delay="3" DisplayName="Create column chart" FilePath="[out_pathOfMonthlyLeaveReport]" sap:VirtualizedContainerService.HintSize="445,69" sap2010:WorkflowViewState.IdRef="ColumnChart_2" SheetName="[sheetName]" ShowLegendKey="True" ShowValuePosition="OutsideEnd" ShowValueTextOrientation="Horizontal">
              <bec:ColumnChart.Options>
                <bec:ShowOptions AutoText="True" DataLabelsType="ShowPercent" HasLeaderLines="False" LegendKey="ShowLabel" Separator="" ShowBubbleSize="False" ShowCategoryName="True" ShowLegend="True" ShowPercentage="False" ShowSeriesName="False" ShowValue="True" />
              </bec:ColumnChart.Options>
              <bec:ColumnChart.Size>
                <bec:ChartSize Height="300" Left="200" Top="200" Width="300" />
              </bec:ColumnChart.Size>
            </bec:ColumnChart>
            <bes:DeleteSheet ExecutionResult="{x:Null}" FilePassword="{x:Null}" ModifyPassword="{x:Null}" ContinueOnError="False" Delay="3" DisplayName="Delete &quot;Sheet1&quot;" FilePath="[out_pathOfMonthlyLeaveReport]" sap:VirtualizedContainerService.HintSize="445,69" sap2010:WorkflowViewState.IdRef="DeleteSheet_3" SheetName="Sheet1" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:ExcelCloseWorkbook DisplayName="Close current workbook" sap:VirtualizedContainerService.HintSize="690,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[workBook]" />
    <ui:LogMessage DisplayName="Log Message- for completion of graph generation" sap:VirtualizedContainerService.HintSize="690,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Monthly leave report with graph is generated successfully.&quot;]" />
    <Assign DisplayName="Assign max casual leaves" sap:VirtualizedContainerService.HintSize="690,60" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[maxCasualLeaves]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[in_dt_MonthlyLeave.AsEnumerable.Max(Function(row) cint(row("Total Number Of Casual Leave")))]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[rowIndex]" DataTable="[in_dt_MonthlyLeave]" DisplayName="For Each Row- in monthly leave data table- to change the font color red" sap:VirtualizedContainerService.HintSize="690,747" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="DepartmentName" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Change font color of maximum casual leave department" sap:VirtualizedContainerService.HintSize="656,627" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[cint(DepartmentName(&quot;Total Number Of Casual Leave&quot;))=maxCasualLeaves]" DisplayName="If- &quot;Total Number Of Casual Leave&quot; is equal to maxcasualleaves" sap:VirtualizedContainerService.HintSize="614,535" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <Sequence DisplayName="Change font color to red" sap:VirtualizedContainerService.HintSize="578,348" sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <bem:ExcelScope FilePassword="{x:Null}" ModifyPassword="{x:Null}" DisplayName="Excel Scope- for monthly leave file" FilePath="[out_pathOfMonthlyLeaveReport]" sap:VirtualizedContainerService.HintSize="536,256" sap2010:WorkflowViewState.IdRef="ExcelScope_1" Visible="False">
                    <bem:ExcelScope.Body>
                      <ActivityAction x:TypeArguments="bem:ExcelParam">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="bem:ExcelParam" Name="WorkBookObj" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Change font color" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_21">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <bes1:CellFont FontName="{x:Null}" CellRange="[&quot;A&quot;+(rowIndex+2).ToString+&quot;:&quot;+&quot;C&quot;+(rowIndex+2).ToString]" Delay="3" DisplayName="Cell font changes to red" FontColor="[System.Drawing.Color.Red]" FontScript="None" FontSize="0" FontUnderLine="None" Font_Style="None" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="CellFont_1" SheetName="[sheetName]" Strikethrough="None" />
                        </Sequence>
                      </ActivityAction>
                    </bem:ExcelScope.Body>
                  </bem:ExcelScope>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:LogMessage DisplayName="Log Message- for starting of uploading monthly leave report" sap:VirtualizedContainerService.HintSize="690,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Uploading monthly leave report on sharepoint...&quot;]" />
    <usa:SharepointApplicationScope AzureApplicationID="{x:Null}" ClientContext="{x:Null}" ClientId="{x:Null}" ClientSecret="{x:Null}" LoginTimeout="{x:Null}" Password="{x:Null}" AzureAppPermissions="None" DisplayName="Sharepoint application scope- for monthly leave report" sap:VirtualizedContainerService.HintSize="690,1803" sap2010:WorkflowViewState.IdRef="SharepointApplicationScope_2" PlatformType="Online" QueryGrouping="False" ResetCredentials="False" SecurePassword="[in_SharePointPassword]" SharePointInstanceType="Online" URL="[in_SharePointURL]" UserName="[in_SharePointUsername]">
      <usa:SharepointApplicationScope.Body>
        <ActivityAction x:TypeArguments="us:SharePointContextInfo">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="us:SharePointContextInfo" Name="SharePointContextInfoTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Create monthly leave tracker folder and upload monthly leave report file  in it" sap:VirtualizedContainerService.HintSize="526,1662" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="spMonthlyLeaveReport" />
              <Variable x:TypeArguments="s:String[]" Name="userChildrenNames" />
              <Variable x:TypeArguments="s:String[]" Name="yearlyChildrenNames" />
              <Variable x:TypeArguments="x:String" Name="monthlyLeaveFolderOnSharePoint" />
              <Variable x:TypeArguments="x:String" Name="currentYearFolder" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign monthly leave report path on sharepoint" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[spMonthlyLeaveReport]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Format("{0}/{1}/",in_UserPath,out_MonthlyLeaveReportName)]</InArgument>
              </Assign.Value>
            </Assign>
            <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[userChildrenNames]" ChooseFile="False" DisplayName="Get user folder children names" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="GetChildrenNames_1" RelativeUrl="[in_UserFolderURL]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
            <If Condition="[Not userChildrenNames.Contains(out_MonthlyLeaveReportName)]" DisplayName="Is monthly leave report folder exist not on sharepoint?" sap:VirtualizedContainerService.HintSize="484,383" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence DisplayName="Monthly leave report folder not exist" sap:VirtualizedContainerService.HintSize="311,196" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create monthly leave report folder" sap:VirtualizedContainerService.HintSize="269,104" sap2010:WorkflowViewState.IdRef="CreateFolder_2" LibraryName="[in_SharedDocuments]" RelativeUrl="[spMonthlyLeaveReport]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                </Sequence>
              </If.Then>
            </If>
            <Assign DisplayName="Assign monthly leave report folder" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[monthlyLeaveFolderOnSharePoint]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Format("{0}/{1}/",in_UserFolderURL,out_MonthlyLeaveReportName)]</InArgument>
              </Assign.Value>
            </Assign>
            <usal:GetChildrenNames AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChildrenNames="[yearlyChildrenNames]" ChooseFile="False" DisplayName="Get monthly leave report folder children names" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="GetChildrenNames_2" RelativeUrl="[monthlyLeaveFolderOnSharePoint]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
            <If Condition="[Not  yearlyChildrenNames.Contains(in_CurrentYear)]" DisplayName="Is current year folder exist not on sharepoint?" sap:VirtualizedContainerService.HintSize="484,483" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <Sequence DisplayName="Current year folder not exist" sap:VirtualizedContainerService.HintSize="311,296" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="currentYearOnSharePoint" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign current year path on sharepoint" sap:VirtualizedContainerService.HintSize="269,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[currentYearOnSharePoint]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[String.format("{0}{1}/",spMonthlyLeaveReport,in_CurrentYear)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <usal:CreateFolder AttachmentsAction="{x:Null}" LocalPathHintText="{x:Null}" RelativeUrlHintText="{x:Null}" ChooseFile="False" DisplayName="Create current year folder" sap:VirtualizedContainerService.HintSize="269,104" sap2010:WorkflowViewState.IdRef="CreateFolder_3" LibraryName="[in_SharedDocuments]" RelativeUrl="[currentYearOnSharePoint]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="True" ShowListName="False" ShowLocalPath="False" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
                </Sequence>
              </If.Then>
            </If>
            <Assign DisplayName="Assign current year folder on sharepoint" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[currentYearFolder]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Format("{0}/{1}/{2}/",in_UserFolderURL,out_MonthlyLeaveReportName,in_CurrentYear)]</InArgument>
              </Assign.Value>
            </Assign>
            <usal:UploadFile AttachmentsAction="{x:Null}" PropertiesToAdd="{x:Null}" RelativeUrlHintText="{x:Null}" AllowOperationsOnASPXFiles="False" AllowOverwrite="True" CheckInFileAfterCreation="False" CheckOutFileBeforeOverwrite="False" ChooseFile="True" DisplayName="Upload monthly leave report file on sharepoint" sap:VirtualizedContainerService.HintSize="484,104" sap2010:WorkflowViewState.IdRef="UploadFile_1" LocalPath="[out_pathOfMonthlyLeaveReport]" LocalPathHintText="The current local path of the file" RelativeUrl="[currentYearFolder]" ShowAttachFiles="False" ShowCAMLQuery="False" ShowCAMLWarning="False" ShowGroupDescription="False" ShowGroupName="False" ShowLibraryName="False" ShowListName="False" ShowLocalPath="True" ShowMove="False" ShowPermissionDropdown="False" ShowPropertiesDictionary="False" ShowRelativeUrl="True" ShowRename="False" ShowUserName="False" />
          </Sequence>
        </ActivityAction>
      </usa:SharepointApplicationScope.Body>
    </usa:SharepointApplicationScope>
    <ui:LogMessage DisplayName="Log Message- for completion of uploading monthly leave report" sap:VirtualizedContainerService.HintSize="690,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Monthly leave report is uploaded successfully on sharepoint.&quot;]" />
  </Sequence>
</Activity>